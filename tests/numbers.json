{
    // "number NaN": [NaN]
    // "number ++": [++1234]
    // "number +1": [+1234]
    // "number +inf": [+Inf]
    // "number -01": [-01]
    // "number -1.0.": [-1.0.]
    // "number -2.": [-2.]
    // "number .-1": .-1
    // "number .2e-3": .2e-3
    // "number 0.1.2": 0.1.2
    // "number 0.3e+": 0.3e+
    // "number 0.3e": 0.3e
    // "number 0.e1": 0.e1
    // "number 0E+": 0E+
    // "number 0E": 0E
    // "number 0e+": 0e+
    // "number 1.0e+": 1.0e+
    // "number 1 000.0": 1 000.0
    // "number 1eE2": 1eE2
    // "number 2.e+3": 2.e+3
    // "number expression": 1+2
    // "number hex1": 0x1
    // "number 0e+-1": 0e+-1
    // "invalid negative real": -123.123foo
    // "invalid bigger int": 123ï¿½
    // "number - 1": - 1
    // "number -012": -012
    // "number 1.": 1.
    
    "number": 123e65,
    // "number .1": .1,
    "number 0e+1": 0e+1,
    "number 0e1": 0e1,
    "number after space": [ 4],
    "double close to 0": -0.00000000000000000000000000001,
    "int with exp": 20e1,
    "-0": -0,
    "negative int": -123,
    "capital E": 1E22,
    "capital E neg expr": 1E-2,
    "captal E poz expr": 1E+2,
    "real exponent": 123e45,
    "simple real": 123.456789
}